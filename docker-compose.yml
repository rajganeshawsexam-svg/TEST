version: "3.8"
services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"       # HTTP (route by Host header)
      - "8080:8080"   # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
      - --log.level=INFO
    networks:
      - app-net
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: payload
      POSTGRES_PASSWORD: payloadpass
      POSTGRES_DB: payloaddb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # object storage API
      - "9001:9001"   # console
    volumes:
      - miniodata:/data
    networks:
      - app-net

  payload:
    build: ./payload
    container_name: payload
    restart: unless-stopped
    env_file:
      - ./payload/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payload.rule=Host(`cms.test`)"
      - "traefik.http.routers.payload.entrypoints=web"
      - "traefik.http.services.payload.loadbalancer.server.port=3000"
    depends_on:
      - postgres
      - minio
    networks:
      - app-net

  api:
    build: ./api
    container_name: api
    restart: unless-stopped
    env_file:
      - ./api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.test`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3001"
    depends_on:
      - postgres
    networks:
      - app-net

volumes:
  pgdata:
  miniodata:

networks:
  app-net:
    driver: bridge
